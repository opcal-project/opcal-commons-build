image: eclipse-temurin:17-jdk

stages:
  - test
  - deploy

variables:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  MAVEN_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"


cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .m2/repository
    - .sonar/cache


.test-templete : &test-templete
  stage: test
  script:
    - ./mvnw -U clean $MAVEN_CLI_OPTS test -Dgpg.skip=true
    - ./mvnw ossindex:audit

.deploy-template: &deploy-template
  stage: deploy
  before_script:
    - apt-get update && apt-get install -y gnupg2
    - export GPG_TTY=$(tty)
    - echo "${GPG_PRI}" | gpg --batch --import
    
test:
  <<: *test-templete
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=/root/.m2/repository"
    SONAR_USER_HOME: "/root/.sonar/${CI_PROJECT_NAME}"
  before_script:
    - mkdir -p ${SONAR_USER_HOME}
  except:
    refs:
      - "/^*.release$/"
    changes:
      - "*.md"
  tags:
    - build

test-tags:
  <<: *test-templete
  only:
    - tags

deploy-snapshot:
  <<: *deploy-template
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=/root/.m2/repository"
    SONAR_USER_HOME: "/root/.sonar/${CI_PROJECT_NAME}"
  script:
    - ./mvnw -U clean $MAVEN_CLI_OPTS deploy -Dgpg.passphrase=${GPG_PASSPHRASE} -Dmaven.test.skip=true -s settings.xml
  except:
    refs:
     - "/^*.release$/"
    changes:
      - "*.md"
  tags:
    - build

      
deploy-release :
  <<: *deploy-template
  script:
    - SNAPSHOT_VERSION=$(./mvnw help:evaluate -Dexpression=project.version | grep "^[^\\[]" |grep -v Download |grep -v Progress)
    - RELEASE_VERSION=${SNAPSHOT_VERSION/-SNAPSHOT/}
    - ./mvnw versions:set -DnewVersion=${RELEASE_VERSION}
    - ./mvnw -U clean $MAVEN_CLI_OPTS deploy -Dgpg.passphrase=${GPG_PASSPHRASE} -Dmaven.test.skip=true -s settings.xml
  only:
    - "/^*.release$/"


